name: AI Pull Request Review

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  pull-requests: write  # Required for PR comment

jobs:
  ai_review:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout PR branch
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Ensure full commit history
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Fetch base and head branches
      run: |
        git fetch origin ${{ github.base_ref }}:${{ github.base_ref }}
        git fetch origin ${{ github.head_ref }}:${{ github.head_ref }}

    - name: Generate PR diff
      run: |
        git diff origin/${{ github.base_ref }}...origin/${{ github.head_ref }} > diff.txt

    - name: Run AI Review with OpenAI
      id: ai
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        DIFF_CONTENT=$(cat diff.txt | sed 's/"/\\"/g' | sed ':a;N;$!ba;s/\n/\\n/g')

        PROMPT=$(cat <<EOF
You are an experienced senior software engineer reviewing a Pull Request.

Your goal:
1. Detect runtime errors, logical flaws, or misuse of libraries/frameworks.
2. Call out missing validations, edge cases, or error handling.
3. Flag duplicate, unused, or repetitive code.
4. Suggest cleaner, more secure, or faster alternatives with reasoning.
5. If possible, show before/after code and explain why it's better.

Only suggest real improvements. Do not rewrite working code for style only.

Here is the code diff:
$DIFF_CONTENT
EOF
)

        REVIEW=$(echo "$RESPONSE" | jq -r '.choices[0].message.content')

        echo "REVIEW<<EOF" >> $GITHUB_OUTPUT
        echo "$REVIEW" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Comment on the PR with AI Review
      uses: peter-evans/create-or-update-comment@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          ðŸ¤– **AI Code Review Feedback**
          
          ${{ steps.ai.outputs.REVIEW }}
